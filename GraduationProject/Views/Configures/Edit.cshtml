@model DHD.ENTITY.Configure

@{
    ViewBag.Title = "Edit";
}


<div class="box">
    <div class="table-head form-inline pd10 ">
        <div class="pull-left">
            <ol class="breadcrumb bc-3">
                <li><a href="">主页</a></li>
                <li><a href="/Configures/Index">抓取配置管理</a></li>
                <li class="active">抓取配置编辑</li>
            </ol>
        </div>
        <div class="text-right" style="visibility:hidden">
            <div class="form-group">
                <input type="text" class="form-control" id="txtSearch" placeholder="搜索关键字">
            </div>
            <div class="form-group">
                <button class="btn btn-default" type="button" id="btnSearch" onclick="search()"><i class="fa fa-search"></i> 搜索</button>
            </div>
            <div class="form-group">
                <button class="btn btn-default" type="button" id="btnSearch" onclick="window.location = '/Schools/Create'"><i class="fa fa-search"></i> 添加</button>
            </div>
            @*<div class="form-group">
                    <button class="btn btn-default" type="button" id="btnSearch" onclick="catchData()"><i class="fa fa-search"></i> 抓取</button>
                </div>*@
        </div>
    </div>
    <div class="table-responsive table-main">
        <div id="tbfilelist_wrapper" class="dataTables_wrapper" role="grid">
            <div class="row"><div id="tbfilelist_processing" class="dataTables_processing" style="visibility: hidden;"><img src="/Content/assets/images/loader-1.gif"></div></div>
            <div id="content">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.ListPath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ListPath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ListPath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HrefPath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.HrefPath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.HrefPath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TitlePath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TitlePath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TitlePath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TimePath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TimePath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TimePath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ContentPath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ContentPath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContentPath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AuthorPath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AuthorPath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AuthorPath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SchoolId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsDelete, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.IsDelete, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsDelete, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NextPageModule, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NextPageModule, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NextPageModule, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>


            </div>
        </div>
    </div>

</div>
